[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Freddy Hernandez. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hernandez F (2022). RealDists: Real Statistical Distributions. R package version 0.0.0.9000, https://github.com/fhernanb/RealDists.","code":"@Manual{,   title = {RealDists: Real Statistical Distributions},   author = {Freddy Hernandez},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/fhernanb/RealDists}, }"},{"path":"/index.html","id":"realdists-","dir":"","previous_headings":"","what":"Real Statistical Distributions","title":"Real Statistical Distributions","text":"package available statistical distributions defined . package possible estimate parameters fit regression models within GAMLSS framework.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Real Statistical Distributions","text":"install RealDists package need install devtools package , follow instructions : can visit package website explore vignettes (articles) function reference.","code":"if (!require('devtools')) install.packages('devtools') devtools::install_github('fhernanb/RealDists', force=TRUE) require(RealDists)"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 RealDists authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/dGEG.html","id":null,"dir":"Reference","previous_headings":"","what":"The Generalised exponential-Gaussian distribution — dGEG","title":"The Generalised exponential-Gaussian distribution — dGEG","text":"Density, distribution function, quantile function, random generation hazard function Generalised exponential-Gaussian distribution parameters mu, sigma, nu tau.","code":""},{"path":"/reference/dGEG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Generalised exponential-Gaussian distribution — dGEG","text":"","code":"dGEG(x, mu = 0, sigma = 1, nu = 1, tau = 1, log = FALSE)  pGEG(q, mu = 0, sigma = 1, nu = 1, tau = 1, lower.tail = TRUE, log.p = FALSE)  qGEG(p, mu = 0, sigma = 1, nu = 1, tau = 1)  rGEG(n = 1, mu = 0, sigma = 1, nu = 1, tau = 1)"},{"path":"/reference/dGEG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Generalised exponential-Gaussian distribution — dGEG","text":"x, q vector quantiles. mu parameter. sigma parameter. nu parameter. tau parameter. log, log.p logical; TRUE, probabilities p given log(p). lower.tail logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x]. p vector probabilities. n number observations.","code":""},{"path":"/reference/dGEG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Generalised exponential-Gaussian distribution — dGEG","text":"dGEG gives density, pGEG gives distribution function, qGEG gives quantile function, rGEG generates random deviates.","code":""},{"path":"/reference/dGEG.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Generalised exponential-Gaussian distribution — dGEG","text":"Generalised exponential-Gaussian parameters mu, sigma, nu tau density given \\(f(x | \\mu, \\sigma, \\nu, \\tau) = \\frac{\\tau}{\\nu} \\exp(w) \\Phi \\left( z - \\frac{\\sigma}{\\nu} \\right) \\left[ \\Phi(z) - \\exp(w)  \\Phi \\left( z - \\frac{\\sigma}{\\nu} \\right) \\right]^{\\tau-1}\\) \\(-\\infty < x < \\infty\\). \\(w=\\frac{\\mu-x}{\\nu} + \\frac{\\sigma^2}{2\\nu^2}\\) \\(z=\\frac{x-\\mu}{\\sigma}\\).","code":""},{"path":"/reference/dGEG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Generalised exponential-Gaussian distribution — dGEG","text":"","code":"## The probability density function curve(dGEG(x, mu=7, sigma=0.25, nu=0.05, tau=1),       from=0, to=10, col=\"red\", las=1, ylab=\"f(x)\")  curve(dGEG(x, mu=7, sigma=0.25, nu=0.05, tau=0.5),       add=TRUE, col=\"blue3\")  curve(dGEG(x, mu=7, sigma=0.25, nu=0.05, tau=0.1),       add=TRUE, col=\"green4\")  legend(\"topleft\", col=c(\"red\", \"blue3\", \"green4\"), lty=1, bty=\"n\",        legend=c(\"mu=7, sigma=0.25, nu=0.05, tau=1\",                 \"mu=7, sigma=0.25, nu=0.05, tau=0.5\",                 \"mu=7, sigma=0.25, nu=0.05, tau=0.1\"))"},{"path":"/reference/estim_mu_sigma_nu_tau_GEG.html","id":null,"dir":"Reference","previous_headings":"","what":"estim_mu_sigma_nu_tau_GEG — estim_mu_sigma_nu_tau_GEG","title":"estim_mu_sigma_nu_tau_GEG — estim_mu_sigma_nu_tau_GEG","text":"function generates initial values GEG distribution.","code":""},{"path":"/reference/estim_mu_sigma_nu_tau_GEG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estim_mu_sigma_nu_tau_GEG — estim_mu_sigma_nu_tau_GEG","text":"","code":"estim_mu_sigma_nu_tau_GEG(y)"},{"path":"/reference/estim_mu_sigma_nu_tau_GEG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estim_mu_sigma_nu_tau_GEG — estim_mu_sigma_nu_tau_GEG","text":"y vector random sample","code":""},{"path":"/reference/estim_mu_sigma_nu_tau_GEG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"estim_mu_sigma_nu_tau_GEG — estim_mu_sigma_nu_tau_GEG","text":"","code":"y <- rGEG(n=100, mu=1, sigma=1, nu=1, tau=1) estim_mu_sigma_nu_tau_GEG(y=y) #>    mu_hat sigma_hat    nu_hat   tau_hat  #> 2.4545591 0.6110596 1.0932250 0.2226632"},{"path":"/reference/GEG.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalised exponential-Gaussian family — GEG","title":"Generalised exponential-Gaussian family — GEG","text":"function GEG() defines Generalised exponential-Gaussian distribution, four parameter distribution, gamlss.family object used GAMLSS fitting using function gamlss().","code":""},{"path":"/reference/GEG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalised exponential-Gaussian family — GEG","text":"","code":"GEG(   mu.link = \"identity\",   sigma.link = \"log\",   nu.link = \"log\",   tau.link = \"log\" )"},{"path":"/reference/GEG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalised exponential-Gaussian family — GEG","text":"mu.link defines mu.link, \"identity\" link default mu parameter. sigma.link defines sigma.link, \"log\" link default sigma. nu.link defines nu.link, \"log\" link default nu. tau.link defines tau.link, \"log\" link default tau.","code":""},{"path":"/reference/GEG.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalised exponential-Gaussian family — GEG","text":"Generalised exponential-Gaussian parameters mu, sigma, nu tau density given \\(f(x | \\mu, \\sigma, \\nu, \\tau) = \\frac{\\tau}{\\nu} \\exp(w) \\Phi \\left( z - \\frac{\\sigma}{\\nu} \\right) \\left[ \\Phi(z) - \\exp(w)  \\Phi \\left( z - \\frac{\\sigma}{\\nu} \\right) \\right]^{\\tau-1}\\) \\(-\\infty < x < \\infty\\). \\(w=\\frac{\\mu-x}{\\nu} + \\frac{\\sigma^2}{2\\nu^2}\\) \\(z=\\frac{x-\\mu}{\\sigma}\\) \\(\\Phi\\) cumulative function standard normal distribution.","code":""},{"path":"/reference/GEG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalised exponential-Gaussian family — GEG","text":"","code":"# Example 1 - without covariates ------------------------------------------  n <- 100  # The true parameters are: true_mu <- -5 true_si <- 4 true_nu <- 2.5 true_ta <- 1 true_theta <- c(true_mu, true_si, true_nu, true_ta)  # Graphing the pdf curve(dGEG(x, mu=true_mu, sigma=true_si, nu=true_nu, tau=true_ta),       ylab=\"Density\", xlab=\"X\", las=1,       from=-25, to=25, lwd=3, col=\"tomato\")   # Simulating a random sample y <- rGEG(n=n, mu=true_mu, sigma=true_si, nu=true_nu, tau=true_ta)  # Estimating paramaters library(gamlss) #> Loading required package: splines #> Loading required package: gamlss.data #>  #> Attaching package: 'gamlss.data' #> The following object is masked from 'package:datasets': #>  #>     sleep #> Loading required package: gamlss.dist #> Loading required package: MASS #> Loading required package: nlme #> Loading required package: parallel #>  **********   GAMLSS Version 5.4-3  **********  #> For more on GAMLSS look at https://www.gamlss.com/ #> Type gamlssNews() to see new features/changes/bug fixes. mod <- gamlss(y ~ 1, family=GEG,               control=gamlss.control(n.cyc=1000, trace=TRUE)) #> GAMLSS-RS iteration 1: Global Deviance = 593.5147   # Vector with the estimated results res <- c(mu_hat=coef(mod, what=\"mu\"),          sigma_hat=exp(coef(mod, what=\"sigma\")),          nu_hat=exp(coef(mod, what=\"nu\")),          tau_hat=exp(coef(mod, what=\"tau\")))  # Comparing true vector and estimated vector round(cbind(true_theta, with_GEG=res), digits=2) #>                       true_theta with_GEG #> mu_hat.(Intercept)          -5.0   -48.64 #> sigma_hat.(Intercept)        4.0     6.62 #> nu_hat.(Intercept)           2.5     4.08 #> tau_hat.(Intercept)          1.0 13022.84  # Histogram, estimated density and true density truehist(y, ylab=\"Density\", col=\"gray\", las=1)  curve(dGEG(x, mu=res[1], sigma=res[2], nu=res[3], tau=res[4]),       add=TRUE, col=\"blue2\", lwd=2)  curve(dGEG(x, mu=true_theta[1], sigma=true_theta[2],            nu=true_theta[3], tau=true_theta[4]),       add=TRUE, col=\"green4\", lwd=2)  legend(\"topright\", lwd=2, bty=\"n\",        legend=c(\"with GEG\", \"true density\"),        col=c(\"blue2\", \"green4\"))    # Example 2 - with covariates --------------------------------------------- n <- 5000  # The true parameters are: b0_mu <- -1 b1_mu <-  2  b0_sigma <- -2 b1_sigma <-  4  true_nu <- 0.5 true_ta <- 0.75  # The true theta vector true_theta <- c(b0_mu, b1_mu, b0_sigma, b1_sigma, true_nu, true_ta)  # Simulating covariates x1 <- runif(n, min=0.49, max=0.51) x2 <- runif(n, min=0.49, max=0.51)  # Simulating a random sample y <- rGEG(n=n,           mu    =     b0_mu    + b1_mu    * x1,           sigma = exp(b0_sigma + b1_sigma * x2),           nu    = true_nu,           tau   = true_ta)  # The dataframe datos <- data.frame(y=y, x1=x1, x2=x2)  # Estimating paramaters # Using gamlss with our proposal mod <- gamlss(y ~ x1,               sigma.fo = ~ x2,               family=GEG,               control=gamlss.control(n.cyc=10000, trace=TRUE)) #> GAMLSS-RS iteration 1: Global Deviance = 15893.54  #> GAMLSS-RS iteration 2: Global Deviance = 15893.53  #> GAMLSS-RS iteration 3: Global Deviance = 15893.53   # To obtain the estimated parameters param <- unlist(coefAll(mod))  # Comparing true vector and estimated vector res <- cbind(true_theta, with_gamlss=c(param[1:4], exp(param[5:6]))) round(res, digits=2) #>                   true_theta with_gamlss #> mu.(Intercept)         -1.00        1.79 #> mu.x1                   2.00       -4.12 #> sigma.(Intercept)      -2.00       -0.86 #> sigma.x2                4.00        2.06 #> nu.(Intercept)          0.50        0.35 #> tau.(Intercept)         0.75        1.15"},{"path":"/reference/logLik_GEG.html","id":null,"dir":"Reference","previous_headings":"","what":"logLik_GEG — logLik_GEG","title":"logLik_GEG — logLik_GEG","text":"auxiliar function obtain logLik GEG.","code":""},{"path":"/reference/logLik_GEG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logLik_GEG — logLik_GEG","text":"","code":"logLik_GEG(logparam = c(0, 0, 0, 0), x)"},{"path":"/reference/logLik_GEG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logLik_GEG — logLik_GEG","text":"logparam vector values mu, sigma, nu tau x vector data","code":""},{"path":"/reference/logLik_GEG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logLik_GEG — logLik_GEG","text":"","code":"y <- rGEG(n=100, mu=1, sigma=1, nu=1, tau=1) logLik_GEG(logparam=c(0, 0, 0, 0), x=y) #> [1] -204.9786"}]
